name: CI

on:
  push:
    branches: 
    - main
    - rel/*
  pull_request:
    branches: 
    - main
    - rel/*

env:
  ArtifactsDirectoryName: 'artifacts'
  BuildConfiguration: 'Debug'
  BuildPlatform: 'Any CPU'
  ContinuousIntegrationBuild: 'true'
  DotNet3Version: '3.x'
  DotNet5Version: '5.x'
  DotNet6Version: '6.x'

jobs:

  WindowsBuild:
    name: Build and Test (Windows)
    runs-on: windows-latest
    environment: Production
  
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install .NET Core ${{ env.DotNet3Version }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DotNet3Version }}

    - name: Install .NET ${{ env.DotNet5Version }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DotNet5Version }}

    - name: Install .NET ${{ env.DotNet6Version }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DotNet6Version }}
        include-prerelease: true

    - name: Build Solution
      run: dotnet build "/p:Platform=${{ env.BuildPlatform }}" "/p:Configuration=${{ env.BuildConfiguration }}" "/BinaryLogger:${{ env.ArtifactsDirectoryName }}\msbuild.binlog"

    - name: Run Unit Tests (.NET Core 3.1)
      run: dotnet test --logger trx --no-restore --no-build --framework netcoreapp3.1 /restore:false
      
    - name: Run Unit Tests (.NET 5)
      run: dotnet test --logger trx --no-restore --no-build --framework net5.0 /restore:false

    - name: Run Unit Tests (.NET 6)
      run: dotnet test --logger trx --no-restore --no-build --framework net6.0 /restore:false

    - name: Run Unit Tests (.NET Framework)
      run: dotnet test --logger trx --no-restore --no-build --framework net472 /restore:false

    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      if: success() || failure()
      with:
        name: test-results-win
        path: '**/TestResults/*.trx'
        if-no-files-found: error

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      if: success() || failure()
      with:
        name: ${{ env.ArtifactsDirectoryName }}-win
        path: ${{ env.ArtifactsDirectoryName }}

    - name: Push Packages
      run: dotnet nuget push --skip-duplicate --api-key ${{ secrets.NuGetApiKey }} ${{ env.ArtifactsDirectoryName }}\**\*.nupkg
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}

  LinuxBuild:
    name: Build and Test (Linux)
    runs-on: ubuntu-latest
  
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install .NET Core ${{ env.DotNet3Version }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DotNet3Version }}

    - name: Install .NET ${{ env.DotNet5Version }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DotNet5Version }}

    - name: Install .NET ${{ env.DotNet6Version }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DotNet6Version }}
        include-prerelease: true

    - name: Build Solution
      run: dotnet build "/p:Platform=${{ env.BuildPlatform }}" "/p:Configuration=${{ env.BuildConfiguration }}" "/BinaryLogger:${{ env.ArtifactsDirectoryName }}\msbuild.binlog"

    - name: Run Unit Tests (.NET Core 3.1)
      run: dotnet test --logger trx --no-restore --no-build --framework netcoreapp3.1 /restore:false

    - name: Run Unit Tests (.NET 5)
      run: dotnet test --logger trx --no-restore --no-build --framework net5.0 /restore:false

    - name: Run Unit Tests (.NET 6)
      run: dotnet test --logger trx --no-restore --no-build --framework net6.0 /restore:false

    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      if: success() || failure()
      with:
        name: test-results-linux
        path: '**/TestResults/*.trx'
        if-no-files-found: error

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      if: success() || failure()
      with:
        name: ${{ env.ArtifactsDirectoryName }}-linux
        path: ${{ env.ArtifactsDirectoryName }}

  MacOSBuild:
    name: Build and Test (MacOS)
    runs-on: macos-latest
  
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install .NET Core ${{ env.DotNet3Version }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DotNet3Version }}

    - name: Install .NET ${{ env.DotNet5Version }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DotNet5Version }}

    - name: Install .NET ${{ env.DotNet6Version }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DotNet6Version }}
        include-prerelease: true

    - name: Build Solution
      run: dotnet build "/p:Platform=${{ env.BuildPlatform }}" "/p:Configuration=${{ env.BuildConfiguration }}" "/BinaryLogger:${{ env.ArtifactsDirectoryName }}\msbuild.binlog"

    - name: Run Unit Tests (.NET Core 3.1)
      run: dotnet test --logger trx --no-restore --no-build --framework netcoreapp3.1 /restore:false

    - name: Run Unit Tests (.NET 5)
      run: dotnet test --logger trx --no-restore --no-build --framework net5.0 /restore:false

    - name: Run Unit Tests (.NET 6)
      run: dotnet test --logger trx --no-restore --no-build --framework net6.0 /restore:false

    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      if: success() || failure()
      with:
        name: test-results-macos
        path: '**/TestResults/*.trx'
        if-no-files-found: error

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      if: success() || failure()
      with:
        name: ${{ env.ArtifactsDirectoryName }}-macos
        path: ${{ env.ArtifactsDirectoryName }}

